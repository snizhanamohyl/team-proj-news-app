{"mappings":"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","sources":["src/js/weather.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '330800086c869b55fadd072cf641d172';\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather?';\n\nconst refs ={\n    degree: document.querySelector('.weather__app--degree'),\n    daysValue: document.querySelector('.weather__app--days-value'),\n    city: document.querySelector('.weather__app--city'),\n    img: document.querySelector('.weather__app--skyCons'),\n    day: document.querySelector('.weather__app--day'),\n    year: document.querySelector('.weather__app--year'),\n}\nasync function weatherApp() {\n    const url = `${BASE_URL}q=Lviv&units=metric&appid=${API_KEY}`;\n    const response = await axios.get(url);\n\n    return response.data;\n      \n}\n\nasync function weatherAppGeo(lon,lat) {\n    const url = `${BASE_URL}lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n    const response = await axios.get(url);\n\n    return response.data;\n      \n}\n// console.log(weatherApp());\nrenderWeatherApp();\nrenderYourGeoPos();\n\nasync function renderWeatherApp(){\n\n    const data = await weatherApp();\n    const { temp } = data.main;\n    const weather = data.weather[0].main;\n    const { icon } = data.weather[0];\n    refs.degree.textContent = `${Math.round(temp)}°`;\n    refs.daysValue.textContent = weather;\n    refs.city.textContent = data.name;\n    refs.day.textContent = currentDay();\n    refs.year.textContent = allInfoDays();\n    refs.img.setAttribute( 'src', `https://openweathermap.org/img/wn/${icon}@4x.png`)\n}\n\nasync function renderYourGeoPos(){\n    if(navigator.geolocation){\n        await navigator.geolocation.getCurrentPosition(\n            async ({coords:{latitude,longitude}}) =>{\n                const data = await weatherAppGeo(latitude,longitude);\n                const { temp } = data.main;\n                const weather = data.weather[0].main;\n                const { icon } =data.weather[0];\n                refs.degree.textContent = `${Math.round(temp)}°`;\n                refs.daysValue.textContent = weather;\n                refs.city.textContent = data.name;\n                refs.day.textContent = currentDay();\n                refs.year.textContent = allInfoDays();\n                refs.img.setAttribute('src', `https://openweathermap.org/img/wn/${icon}@4x.png`);\n                },\n                error => console.error(error)\n        );\n    }\n}\n\n\nfunction currentDay() {\n    let today = new Date();\n    let day = today.getDay();\n\n    let dayList = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n\n    return dayList[day];\n}\n\n\n\n// function allInfoDays(){\n//     let myDay = new Date();\n\n//     let day = myDay.getDate();\n//     let month = myDay.getMonth();\n//     let year = myDay.getYear();\n//         if(year < 1000){\n//             year += 1900\n//         }\n\n//     let monthList = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Now','Dec'];\n\n//     return  `${day} ${monthList[month]} ${year}`;\n// };\nfunction allInfoDays(){\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    const monthList = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Now','Dec'];\n    const fullDate = `${day} ${monthList[month]} ${year}`;\n    return fullDate;\n    };"],"names":["$bpxeT","parcelRequire","$b7c37e8f14632f7d$var$API_KEY","$b7c37e8f14632f7d$var$BASE_URL","$b7c37e8f14632f7d$var$refs","degree","document","querySelector","daysValue","city","img","day","year","$b7c37e8f14632f7d$var$weatherApp","$b7c37e8f14632f7d$var$_weatherApp","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","url","response","concat","$dIxxU","default","get","_ctx","sent","data","$b7c37e8f14632f7d$var$weatherAppGeo","lon","lat","$b7c37e8f14632f7d$var$_weatherAppGeo","$b7c37e8f14632f7d$var$_renderWeatherApp","temp","weather","icon","main","textContent","Math","round","name","$b7c37e8f14632f7d$var$currentDay","$b7c37e8f14632f7d$var$allInfoDays","setAttribute","$b7c37e8f14632f7d$var$_renderYourGeoPos","_callee1","navigator","geolocation","getCurrentPosition","param","latitude","longitude","coords","_coords","error","console","Date","getDay","date","getFullYear","month","getMonth","getDate","$b7c37e8f14632f7d$var$renderWeatherApp","$b7c37e8f14632f7d$var$renderYourGeoPos"],"version":3,"file":"index.0c6823ff.js.map"}