{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAGMC,EAAM,CACRC,OAAQC,SAASC,cAAc,yBAC/BC,UAAWF,SAASC,cAAc,6BAClCE,KAAMH,SAASC,cAAc,uBAC7BG,IAAKJ,SAASC,cAAc,0BAC5BI,IAAKL,SAASC,cAAc,sBAC5BK,KAAMN,SAASC,cAAc,wBAwDjC,SAASM,IAML,MAFc,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,QAHvC,IAAIC,MACAC,S,CAuBpB,SAASC,IACL,MAAMC,EAAO,IAAIH,KACXF,EAAOK,EAAKC,cACZC,EAAQF,EAAKG,WAInB,MADiB,GAFLH,EAAKI,aACC,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAChDF,MAAUP,G,EAlEnDU,iBAEI,MAAMC,QArBVD,iBAII,aAFuBpB,EAAAsB,QAAMC,IADjB,+GAGIF,I,CAiBGG,IACbC,KAAEA,GAASJ,EAAKK,KAChBC,EAAUN,EAAKM,QAAQ,GAAGD,MAC1BE,KAAEA,GAASP,EAAKM,QAAQ,GAC9BzB,EAAKC,OAAO0B,YAAc,GAAGC,KAAKC,MAAMN,MACvCvB,EAAII,UAAUuB,YAAcF,EAC7BzB,EAAKK,KAAKsB,YAAcR,EAAKW,KAC7B9B,EAAKO,IAAIoB,YAAclB,IACvBT,EAAKQ,KAAKmB,YAAcf,IACxBZ,EAAKM,IAAIyB,aAAc,MAAO,qCAAqCL,W,CAdvEM,GAiBAd,iBACOe,UAAUC,mBACHD,UAAUC,YAAYC,oBACxBjB,OAAQkB,QAAOC,SAACA,EAAQC,UAACA,OACrB,MAAMnB,QA7BtBD,eAA6BqB,EAAIC,GAC7B,MAAMC,EAAM,uDAAkBD,SAAWD,wDAGzC,aAFuBzC,EAAAsB,QAAMC,IAAIoB,IAEjBtB,I,CAyBeuB,CAAcL,EAASC,IACpCf,KAAEA,GAASJ,EAAKK,KAChBC,EAAUN,EAAKM,QAAQ,GAAGD,MAC1BE,KAAEA,GAAQP,EAAKM,QAAQ,GAC7BzB,EAAKC,OAAO0B,YAAc,GAAGC,KAAKC,MAAMN,MACxCvB,EAAKI,UAAUuB,YAAcF,EAC7BzB,EAAKK,KAAKsB,YAAcR,EAAKW,KAC7B9B,EAAKO,IAAIoB,YAAclB,IACvBT,EAAKQ,KAAKmB,YAAcf,IACxBZ,EAAKM,IAAIyB,aAAa,MAAO,qCAAqCL,WAAc,IAEhFiB,GAASC,QAAQD,MAAMA,I,CA/BvCE","sources":["src/js/weather.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '330800086c869b55fadd072cf641d172';\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather?';\n\nconst refs ={\n    degree: document.querySelector('.weather__app--degree'),\n    daysValue: document.querySelector('.weather__app--days-value'),\n    city: document.querySelector('.weather__app--city'),\n    img: document.querySelector('.weather__app--skyCons'),\n    day: document.querySelector('.weather__app--day'),\n    year: document.querySelector('.weather__app--year'),\n}\nasync function weatherApp() {\n    const url = `${BASE_URL}q=Lviv&units=metric&appid=${API_KEY}`;\n    const response = await axios.get(url);\n\n    return response.data;\n      \n}\n\nasync function weatherAppGeo(lon,lat) {\n    const url = `${BASE_URL}lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n    const response = await axios.get(url);\n\n    return response.data;\n      \n}\n// console.log(weatherApp());\nrenderWeatherApp();\nrenderYourGeoPos();\n\nasync function renderWeatherApp(){\n\n    const data = await weatherApp();\n    const { temp } = data.main;\n    const weather = data.weather[0].main;\n    const { icon } = data.weather[0];\n    refs.degree.textContent = `${Math.round(temp)}°`;\n    refs.daysValue.textContent = weather;\n    refs.city.textContent = data.name;\n    refs.day.textContent = currentDay();\n    refs.year.textContent = allInfoDays();\n    refs.img.setAttribute( 'src', `https://openweathermap.org/img/wn/${icon}@4x.png`)\n}\n\nasync function renderYourGeoPos(){\n    if(navigator.geolocation){\n        await navigator.geolocation.getCurrentPosition(\n            async ({coords:{latitude,longitude}}) =>{\n                const data = await weatherAppGeo(latitude,longitude);\n                const { temp } = data.main;\n                const weather = data.weather[0].main;\n                const { icon } =data.weather[0];\n                refs.degree.textContent = `${Math.round(temp)}°`;\n                refs.daysValue.textContent = weather;\n                refs.city.textContent = data.name;\n                refs.day.textContent = currentDay();\n                refs.year.textContent = allInfoDays();\n                refs.img.setAttribute('src', `https://openweathermap.org/img/wn/${icon}@4x.png`);\n                },\n                error => console.error(error)\n        );\n    }\n}\n\n\nfunction currentDay() {\n    let today = new Date();\n    let day = today.getDay();\n\n    let dayList = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n\n    return dayList[day];\n}\n\n\n\n// function allInfoDays(){\n//     let myDay = new Date();\n\n//     let day = myDay.getDate();\n//     let month = myDay.getMonth();\n//     let year = myDay.getYear();\n//         if(year < 1000){\n//             year += 1900\n//         }\n\n//     let monthList = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Now','Dec'];\n\n//     return  `${day} ${monthList[month]} ${year}`;\n// };\nfunction allInfoDays(){\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    const monthList = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Now','Dec'];\n    const fullDate = `${day} ${monthList[month]} ${year}`;\n    return fullDate;\n    };"],"names":["$2shzp","parcelRequire","$83ee39fa453a4c23$var$refs","degree","document","querySelector","daysValue","city","img","day","year","$83ee39fa453a4c23$var$currentDay","Date","getDay","$83ee39fa453a4c23$var$allInfoDays","date","getFullYear","month","getMonth","getDate","async","data","default","get","$83ee39fa453a4c23$var$weatherApp","temp","main","weather","icon","textContent","Math","round","name","setAttribute","$83ee39fa453a4c23$var$renderWeatherApp","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","lon","lat","url","$83ee39fa453a4c23$var$weatherAppGeo","error","console","$83ee39fa453a4c23$var$renderYourGeoPos"],"version":3,"file":"index.3179b60b.js.map"}